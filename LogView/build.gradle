import java.text.SimpleDateFormat

plugins {
    id 'com.android.library'
}

android {
    namespace 'com.ryusw.logview'
    compileSdk 31

    defaultConfig {
        minSdk 14
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    libraryVariants.configureEach { variant ->
        variant.outputs.configureEach {
            def df = new SimpleDateFormat("yyyyMMdd")
            df.setTimeZone(TimeZone.getDefault())
            outputFileName = "${project.name}_v${module_version}_${variant.buildType.name}_${df.format(new Date())}.aar"
        }
    }
}

dependencies {

    /* rxjava */
    compileOnly 'io.reactivex.rxjava3:rxandroid:3.0.0'      // 라이브러리이기 때문에 complie 시점에만 해당 기능이 동작
    compileOnly 'io.reactivex.rxjava3:rxjava:3.0.7'

    /* base */
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

ext {
    module_version = "1.0.0.0"

    def df = new SimpleDateFormat("yyyy.MM.dd")
    df.setTimeZone(TimeZone.getDefault())
    releaseModule_path = "${rootProject.rootDir}/LogViewLib${df.format(new Date())}(v${module_version}-release)"
}

tasks.register('releaseModulePath', Delete) {
    delete releaseModule_path
}

tasks.register('makeModule') {
    dependsOn releaseModulePath
    doLast {
        println "************************************************************************************"
        println "***************************** LogView v$module_version release *****************************"
        println "************************************************************************************"

        copy {
            from "build/outputs/aar"
            into "$releaseModule_path/$project.name"
        }
    }
}

makeModule.mustRunAfter clean
makeModule.dependsOn(['releaseModulePath', 'clean', 'assemble'])